{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"D:/jobStuff/hoichistakes/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/jobStuff/hoichistakes/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/jobStuff/hoichistakes/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/jobStuff/hoichistakes/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport var TupleCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(TupleCoder, _Coder);\n  var _super = _createSuper(TupleCoder);\n  function TupleCoder(coders, localName) {\n    var _this;\n    _classCallCheck(this, TupleCoder);\n    var dynamic = false;\n    var types = [];\n    coders.forEach(function (coder) {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n      types.push(coder.type);\n    });\n    var type = \"tuple(\" + types.join(\",\") + \")\";\n    _this = _super.call(this, \"tuple\", type, localName, dynamic);\n    _this.coders = coders;\n    return _this;\n  }\n  _createClass(TupleCoder, [{\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return pack(writer, this.coders, value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n  }]);\n  return TupleCoder;\n}(Coder);","map":{"version":3,"sources":["../../src.ts/coders/tuple.ts"],"names":[],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,SAAS,KAAK,QAAwB,kBAAkB;AACxD,SAAS,IAAI,EAAE,MAAM,QAAQ,SAAS;AAEtC,WAAa,UAAW;EAAA;EAAA;EAGpB,oBAAY,MAAoB,EAAE,SAAiB,EAAA;IAAA;IAAA;IAC/C,IAAI,OAAO,GAAG,KAAK;IACnB,IAAM,KAAK,GAAkB,EAAE;IAC/B,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAI;MACrB,IAAI,KAAK,CAAC,OAAO,EAAE;QAAE,OAAO,GAAG,IAAI;MAAG;MACtC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC;IACF,IAAM,IAAI,GAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAI;IAE/C,0BAAM,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO;IACvC,MAAK,MAAM,GAAG,MAAM;IAAC;EACzB;EAAC;IAAA;IAAA,OAED,gBAAO,MAAc,EAAE,KAA6C,EAAA;MAChE,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;IAC3C;EAAC;IAAA;IAAA,OAED,gBAAO,MAAc,EAAA;MACjB,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAChE;EAAC;EAAA;AAAA,EAtB2B,KAAK","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map"]},"metadata":{},"sourceType":"module"}