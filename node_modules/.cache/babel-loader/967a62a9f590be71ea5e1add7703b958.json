{"ast":null,"code":"var _jsxFileName = \"D:\\\\jobStuff\\\\hoichistakes\\\\src\\\\Utils\\\\walletInteract.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport Web3 from \"web3\";\nimport tokenABI from \"../ABI/tokenABI.json\";\nimport stakeAbi from \"../ABI/stakeAbi.json\";\nimport stake2Abi from \"../ABI/stake2Abi.json\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport { useCallback, useEffect, useReducer } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { providers } from \"ethers\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { BackgroundButton } from \"../components/BackgroundButton/BackgroundButton\";\nimport { Button } from \"../components/Atoms/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider);\nconst tokenContractAddress = \"0xC4EE0aA2d993ca7C9263eCFa26c6f7e13009d2b6\";\n// const tokenContractAddress = \"0xBF96DbA5B1aFD95544b28Eff5f7770CF776044B8\";\nconst stakingContractAddress = \"0x476461CCD16478e48528964C2D1661b99FB49443\";\nconst staking2ContractAddress = \"0xF2736d1548FBf8b1FCACf669a74A220C4F3E0216\";\nconst supportedChains = [{\n  name: \"Ethereum Mainnet\",\n  short_name: \"eth\",\n  chain: \"ETH\",\n  network: \"mainnet\",\n  chain_id: 1,\n  network_id: 1,\n  rpc_url: \"https://mainnet.infura.io/v3/%API_KEY%\",\n  native_currency: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"Ethereum Ropsten\",\n  short_name: \"rop\",\n  chain: \"ETH\",\n  network: \"ropsten\",\n  chain_id: 3,\n  network_id: 3,\n  rpc_url: \"https://ropsten.infura.io/v3/%API_KEY%\",\n  native_currency: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"Ethereum Rinkeby\",\n  short_name: \"rin\",\n  chain: \"ETH\",\n  network: \"rinkeby\",\n  chain_id: 4,\n  network_id: 4,\n  rpc_url: \"https://rinkeby.infura.io/v3/%API_KEY%\",\n  native_currency: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"Ethereum GÃ¶rli\",\n  short_name: \"gor\",\n  chain: \"ETH\",\n  network: \"goerli\",\n  chain_id: 5,\n  network_id: 5,\n  rpc_url: \"https://goerli.infura.io/v3/%API_KEY%\",\n  native_currency: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"RSK Mainnet\",\n  short_name: \"rsk\",\n  chain: \"RSK\",\n  network: \"mainnet\",\n  chain_id: 30,\n  network_id: 30,\n  rpc_url: \"https://public-node.rsk.co\",\n  native_currency: {\n    symbol: \"RSK\",\n    name: \"RSK\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"Ethereum Kovan\",\n  short_name: \"kov\",\n  chain: \"ETH\",\n  network: \"kovan\",\n  chain_id: 42,\n  network_id: 42,\n  rpc_url: \"https://kovan.infura.io/v3/%API_KEY%\",\n  native_currency: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"Ethereum Classic Mainnet\",\n  short_name: \"etc\",\n  chain: \"ETC\",\n  network: \"mainnet\",\n  chain_id: 61,\n  network_id: 1,\n  rpc_url: \"https://ethereumclassic.network\",\n  native_currency: {\n    symbol: \"ETH\",\n    name: \"Ethereum\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"POA Network Sokol\",\n  short_name: \"poa\",\n  chain: \"POA\",\n  network: \"sokol\",\n  chain_id: 77,\n  network_id: 77,\n  rpc_url: \"https://sokol.poa.network\",\n  native_currency: {\n    symbol: \"POA\",\n    name: \"POA\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"POA Network Core\",\n  short_name: \"skl\",\n  chain: \"POA\",\n  network: \"core\",\n  chain_id: 99,\n  network_id: 99,\n  rpc_url: \"https://core.poa.network\",\n  native_currency: {\n    symbol: \"POA\",\n    name: \"POA\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"xDAI Chain\",\n  short_name: \"xdai\",\n  chain: \"POA\",\n  network: \"dai\",\n  chain_id: 100,\n  network_id: 100,\n  rpc_url: \"https://dai.poa.network\",\n  native_currency: {\n    symbol: \"xDAI\",\n    name: \"xDAI\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"Callisto Mainnet\",\n  short_name: \"clo\",\n  chain: \"callisto\",\n  network: \"mainnet\",\n  chain_id: 820,\n  network_id: 1,\n  rpc_url: \"https://clo-geth.0xinfra.com/\",\n  native_currency: {\n    symbol: \"CLO\",\n    name: \"CLO\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"Binance Smart Chain\",\n  short_name: \"bsc\",\n  chain: \"smartchain\",\n  network: \"mainnet\",\n  chain_id: 56,\n  network_id: 56,\n  rpc_url: \"https://bsc-dataseed1.defibit.io/\",\n  native_currency: {\n    symbol: \"BNB\",\n    name: \"BNB\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}, {\n  name: \"BSC TestNet\",\n  short_name: \"bsc\",\n  chain: \"smartchain\",\n  network: \"mainnet\",\n  chain_id: 97,\n  network_id: 97,\n  rpc_url: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n  native_currency: {\n    symbol: \"BNB\",\n    name: \"BNB\",\n    decimals: \"18\",\n    contractAddress: \"\",\n    balance: \"\"\n  }\n}];\nfunction getChainData(chainId) {\n  if (!chainId) {\n    return null;\n  }\n  const chainData = supportedChains.filter(chain => chain.chain_id === chainId)[0];\n  console.log(\"chainId = \", chainId);\n  if (!chainData) {\n    throw new Error(\"ChainId missing or not supported\");\n  }\n  const API_KEY = \"460f40a260564ac4a4f4b3fffb032dad\";\n  if (chainData.rpc_url.includes(\"infura.io\") && chainData.rpc_url.includes(\"%API_KEY%\") && API_KEY) {\n    const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\n    return {\n      ...chainData,\n      rpc_url: rpcUrl\n    };\n  }\n  return chainData;\n}\nfunction ellipseAddress() {\n  let address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  if (!address) {\n    return \"\";\n  }\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\nconst INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    // required\n    options: {\n      infuraId: INFURA_ID // required\n    }\n  },\n\n  \"custom-walletlink\": {\n    display: {\n      logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n      name: \"Coinbase\",\n      description: \"Connect to Coinbase Wallet (not Coinbase App)\"\n    },\n    options: {\n      appName: \"Coinbase\",\n      // Your app name\n      networkUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n      chainId: 1\n    },\n    package: WalletLink,\n    connector: async (_, options) => {\n      const {\n        appName,\n        networkUrl,\n        chainId\n      } = options;\n      const walletLink = new WalletLink({\n        appName\n      });\n      const provider = walletLink.makeWeb3Provider(networkUrl, chainId);\n      await provider.enable();\n      return provider;\n    }\n  }\n};\nlet web3Modal;\nif (typeof window !== \"undefined\") {\n  web3Modal = new Web3Modal({\n    //network: 'mainnet', // optional\n    cacheProvider: true,\n    providerOptions,\n    // required\n    theme: \"dark\"\n  });\n}\nconst initialState = {\n  provider: null,\n  web3Provider: null,\n  address: null,\n  chainId: null\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_WEB3_PROVIDER\":\n      return {\n        ...state,\n        provider: action.provider,\n        web3Provider: action.web3Provider,\n        address: action.address,\n        chainId: action.chainId\n      };\n    case \"SET_ADDRESS\":\n      return {\n        ...state,\n        address: action.address\n      };\n    case \"SET_CHAIN_ID\":\n      return {\n        ...state,\n        chainId: action.chainId\n      };\n    case \"RESET_WEB3_PROVIDER\":\n      return initialState;\n    default:\n      throw new Error();\n  }\n}\nexport const Web3Modals = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    provider,\n    web3Provider,\n    address,\n    chainId\n  } = state;\n  const dispatcher = useDispatch();\n  const connect = useCallback(async function () {\n    // This is the initial `provider` that is returned when\n    // using web3Modal to connect. Can be MetaMask or WalletConnect.\n    const provider = await web3Modal.connect();\n\n    // We plug the initial `provider` into ethers.js and get back\n    // a Web3Provider. This will add on methods from ethers.js and\n    // event listeners such as `.on()` will be different.\n    const web3Provider = new providers.Web3Provider(provider);\n    const signer = web3Provider.getSigner();\n    const address = await signer.getAddress();\n    const network = await web3Provider.getNetwork();\n    dispatch({\n      type: \"SET_WEB3_PROVIDER\",\n      provider,\n      web3Provider,\n      address,\n      chainId: network.chainId\n    });\n    dispatcher({\n      type: \"SET_WALLET\",\n      payload: provider\n    });\n    dispatcher({\n      type: \"SET_ADDRESS\",\n      payload: address\n    });\n  }, [dispatcher]);\n  const disconnect = useCallback(async function () {\n    await web3Modal.clearCachedProvider();\n    if (provider !== null && provider !== void 0 && provider.disconnect && typeof provider.disconnect === \"function\") {\n      await provider.disconnect();\n    }\n    dispatch({\n      type: \"RESET_WEB3_PROVIDER\"\n    });\n  }, [provider]);\n\n  // Auto connect to the cached provider\n  /*\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      connect();\r\n    }\r\n  }, [connect]);\r\n  */\n\n  // A `provider` should come with EIP-1193 events. We'll listen for those events\n  // here so that when a user switches accounts or networks, we can update the\n  // local React state with that new information.\n  useEffect(() => {\n    if (provider !== null && provider !== void 0 && provider.on) {\n      const handleAccountsChanged = accounts => {\n        // eslint-disable-next-line no-console\n        console.log(\"accountsChanged\", accounts);\n        dispatch({\n          type: \"SET_ADDRESS\",\n          address: accounts[0]\n        });\n      };\n\n      // https://docs.ethers.io/v5/concepts/best-practices/#best-practices--network-changes\n      const handleChainChanged = _hexChainId => {\n        window.location.reload();\n      };\n      const handleDisconnect = error => {\n        // eslint-disable-next-line no-console\n        console.log(\"disconnect\", error);\n        disconnect();\n      };\n      provider.on(\"accountsChanged\", handleAccountsChanged);\n      provider.on(\"chainChanged\", handleChainChanged);\n      provider.on(\"disconnect\", handleDisconnect);\n\n      // Subscription Cleanup\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n          provider.removeListener(\"chainChanged\", handleChainChanged);\n          provider.removeListener(\"disconnect\", handleDisconnect);\n        }\n      };\n    }\n  }, [provider, disconnect]);\n  const chainData = getChainData(chainId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: web3Provider ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"bg-red-600 h-35 rounded-xl text-white text-18 px-5\",\n        type: \"button\",\n        onClick: disconnect,\n        children: \"DISCONNECT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        className: \"text-ellipsis\",\n        onClick: connect,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: address && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1 text-white\",\n            children: \"Network:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: chainData === null || chainData === void 0 ? void 0 : chainData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1 text-white\",\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: ellipseAddress(address)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 5\n  }, this);\n};\n_s(Web3Modals, \"GU55ZJ+qX1P+E95dZsmuuRKatJQ=\", false, function () {\n  return [useDispatch];\n});\n_c = Web3Modals;\nexport default Web3Modals;\nexport const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const obj = {\n        status: \"ðð½ Write a message in the text-field above.\",\n        address: addressArray[0]\n      };\n      return obj;\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"ð¥ \" + err.message\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: `https://metamask.io/download.html`,\n            rel: \"noreferrer\",\n            children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)\n    };\n  }\n};\nexport const getCurrentWalletConnected = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\"\n      });\n      if (addressArray.length > 0) {\n        return {\n          address: addressArray[0]\n        };\n      } else {\n        return {\n          address: \"\"\n        };\n      }\n    } catch (err) {\n      return {\n        address: \"\"\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \"\\uD83E\\uDD8A\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: `https://metamask.io/download.html`,\n            rel: \"noreferrer\",\n            children: \"You must install Metamask, a virtual Ethereum wallet, in your browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this)\n    };\n  }\n};\nconst stakingContractInstance = new web3.eth.Contract(stakeAbi, stakingContractAddress);\nconst tokenContractInstance = new web3.eth.Contract(tokenABI, tokenContractAddress);\nconst staking2ContractInstance = new web3.eth.Contract(stake2Abi, staking2ContractAddress);\nexport const getUserBalance = async address => {\n  const _balance = await tokenContractInstance.methods.balanceOf(address).call();\n  return web3.utils.fromWei(_balance, \"ether\");\n};\nexport const approve = async address => {\n  return tokenContractInstance.methods.approve(stakingContractAddress, MaxUint256).send({\n    from: address\n  });\n};\nexport const isApproved = async address => {\n  const _allowance = await tokenContractInstance.methods.allowance(address, stakingContractAddress).call();\n  return _allowance - MaxUint256 === 0;\n};\nexport const stake = (address, amount) => {\n  return stakingContractInstance.methods.stake(web3.utils.toWei(amount)).send({\n    from: address\n  });\n};\nexport const harvest = address => {\n  return stakingContractInstance.methods.getReward().send({\n    from: address\n  });\n};\nexport const withdraw = (address, amount) => {\n  return stakingContractInstance.methods.withdraw(web3.utils.toWei(amount)).send({\n    from: address\n  });\n};\nexport const getReward = address => {\n  return stakingContractInstance.methods.earned(address).call();\n};\nexport const getUserDepositedBalance = async address => {\n  const _balance = await stakingContractInstance.methods.balanceOf(address).call();\n  return web3.utils.fromWei(_balance, \"ether\");\n};\nexport const getTotalLockedBalance = async () => {\n  const _balance = await tokenContractInstance.methods.balanceOf(stakingContractAddress).call();\n  return web3.utils.fromWei(_balance, \"ether\");\n};\nexport const getTotalLockedBalance2 = async () => {\n  const _balance = await staking2ContractInstance.methods.getTotalLockedAmount().call();\n  return web3.utils.fromWei(_balance, \"ether\");\n};\nexport const getUserDepositedBalance2 = async address => {\n  const _balance = await staking2ContractInstance.methods.balanceOf(address).call();\n  return _balance;\n};\nexport const approve2 = async address => {\n  return tokenContractInstance.methods.approve(staking2ContractAddress, MaxUint256).send({\n    from: address\n  });\n};\nexport const isApproved2 = async address => {\n  const _allowance = await tokenContractInstance.methods.allowance(address, staking2ContractAddress).call();\n  return _allowance - MaxUint256 === 0;\n};\nexport const stake2 = (address, amount, apr) => {\n  return staking2ContractInstance.methods.stake(web3.utils.toWei(amount), apr).send({\n    from: address\n  });\n};\nexport const harvest2 = (address, stakingId) => {\n  return staking2ContractInstance.methods.getReward(stakingId).send({\n    from: address\n  });\n};\nexport const withdraw2 = (address, stakingId) => {\n  return staking2ContractInstance.methods.unstake(stakingId).send({\n    from: address\n  });\n};\nexport const getReward2 = stakingId => {\n  return staking2ContractInstance.methods.getReward(stakingId).call();\n};\nexport const getStakingList = async account => {\n  const _balance = await staking2ContractInstance.methods.balanceOf(account).call({\n    from: account\n  });\n  let list = [],\n    _userReward = 0,\n    _depositedAmount = 0;\n  for (let i = 0; i < _balance; i++) {\n    const stakingId = await staking2ContractInstance.methods.stakingOfOwnerByIndex(account, i).call({\n      from: account\n    });\n    const stakingInfo = await staking2ContractInstance.methods.stakingById(stakingId).call({\n      from: account\n    });\n    const claimableAmount = await staking2ContractInstance.methods.claimableAmount(stakingId).call({\n      from: account\n    });\n    _userReward += parseFloat(claimableAmount);\n    console.log('stakingInfo.amounnt', stakingInfo.amount);\n    _depositedAmount += parseFloat(web3.utils.fromWei(stakingInfo.amount, \"ether\"));\n    list.push({\n      ...stakingInfo,\n      amount: web3.utils.fromWei(stakingInfo.amount, \"ether\"),\n      claimableAmount: parseFloat(web3.utils.fromWei(claimableAmount, \"ether\")).toFixed(3)\n    });\n  }\n  console.log('deposited amounts---', _depositedAmount);\n  return [list, _userReward, _depositedAmount];\n};\nvar _c;\n$RefreshReg$(_c, \"Web3Modals\");","map":{"version":3,"names":["Web3","tokenABI","stakeAbi","stake2Abi","WalletConnectProvider","WalletLink","Web3Modal","useCallback","useEffect","useReducer","useDispatch","providers","MaxUint256","BackgroundButton","Button","web3","givenProvider","tokenContractAddress","stakingContractAddress","staking2ContractAddress","supportedChains","name","short_name","chain","network","chain_id","network_id","rpc_url","native_currency","symbol","decimals","contractAddress","balance","getChainData","chainId","chainData","filter","console","log","Error","API_KEY","includes","rpcUrl","replace","ellipseAddress","address","width","slice","INFURA_ID","providerOptions","walletconnect","package","options","infuraId","display","logo","description","appName","networkUrl","connector","_","walletLink","provider","makeWeb3Provider","enable","web3Modal","window","cacheProvider","theme","initialState","web3Provider","reducer","state","action","type","Web3Modals","dispatch","dispatcher","connect","Web3Provider","signer","getSigner","getAddress","getNetwork","payload","disconnect","clearCachedProvider","on","handleAccountsChanged","accounts","handleChainChanged","_hexChainId","location","reload","handleDisconnect","error","removeListener","connectWallet","ethereum","addressArray","request","method","obj","status","err","message","getCurrentWalletConnected","length","stakingContractInstance","eth","Contract","tokenContractInstance","staking2ContractInstance","getUserBalance","_balance","methods","balanceOf","call","utils","fromWei","approve","send","from","isApproved","_allowance","allowance","stake","amount","toWei","harvest","getReward","withdraw","earned","getUserDepositedBalance","getTotalLockedBalance","getTotalLockedBalance2","getTotalLockedAmount","getUserDepositedBalance2","approve2","isApproved2","stake2","apr","harvest2","stakingId","withdraw2","unstake","getReward2","getStakingList","account","list","_userReward","_depositedAmount","i","stakingOfOwnerByIndex","stakingInfo","stakingById","claimableAmount","parseFloat","push","toFixed"],"sources":["D:/jobStuff/hoichistakes/src/Utils/walletInteract.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport Web3 from \"web3\";\r\nimport tokenABI from \"../ABI/tokenABI.json\";\r\nimport stakeAbi from \"../ABI/stakeAbi.json\";\r\nimport stake2Abi from \"../ABI/stake2Abi.json\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport WalletLink from \"walletlink\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { useCallback, useEffect, useReducer } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { providers } from \"ethers\";\r\nimport { MaxUint256 } from \"@ethersproject/constants\";\r\nimport { BackgroundButton } from \"../components/BackgroundButton/BackgroundButton\";\r\nimport { Button } from \"../components/Atoms/Button\";\r\n\r\nconst web3 = new Web3(Web3.givenProvider);\r\nconst tokenContractAddress = \"0xC4EE0aA2d993ca7C9263eCFa26c6f7e13009d2b6\";\r\n// const tokenContractAddress = \"0xBF96DbA5B1aFD95544b28Eff5f7770CF776044B8\";\r\nconst stakingContractAddress = \"0x476461CCD16478e48528964C2D1661b99FB49443\";\r\nconst staking2ContractAddress = \"0xF2736d1548FBf8b1FCACf669a74A220C4F3E0216\";\r\n\r\nconst supportedChains = [\r\n  {\r\n    name: \"Ethereum Mainnet\",\r\n    short_name: \"eth\",\r\n    chain: \"ETH\",\r\n    network: \"mainnet\",\r\n    chain_id: 1,\r\n    network_id: 1,\r\n    rpc_url: \"https://mainnet.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ethereum\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Ropsten\",\r\n    short_name: \"rop\",\r\n    chain: \"ETH\",\r\n    network: \"ropsten\",\r\n    chain_id: 3,\r\n    network_id: 3,\r\n    rpc_url: \"https://ropsten.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ethereum\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Rinkeby\",\r\n    short_name: \"rin\",\r\n    chain: \"ETH\",\r\n    network: \"rinkeby\",\r\n    chain_id: 4,\r\n    network_id: 4,\r\n    rpc_url: \"https://rinkeby.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ethereum\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum GÃ¶rli\",\r\n    short_name: \"gor\",\r\n    chain: \"ETH\",\r\n    network: \"goerli\",\r\n    chain_id: 5,\r\n    network_id: 5,\r\n    rpc_url: \"https://goerli.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ethereum\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"RSK Mainnet\",\r\n    short_name: \"rsk\",\r\n    chain: \"RSK\",\r\n    network: \"mainnet\",\r\n    chain_id: 30,\r\n    network_id: 30,\r\n    rpc_url: \"https://public-node.rsk.co\",\r\n    native_currency: {\r\n      symbol: \"RSK\",\r\n      name: \"RSK\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Kovan\",\r\n    short_name: \"kov\",\r\n    chain: \"ETH\",\r\n    network: \"kovan\",\r\n    chain_id: 42,\r\n    network_id: 42,\r\n    rpc_url: \"https://kovan.infura.io/v3/%API_KEY%\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ethereum\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Ethereum Classic Mainnet\",\r\n    short_name: \"etc\",\r\n    chain: \"ETC\",\r\n    network: \"mainnet\",\r\n    chain_id: 61,\r\n    network_id: 1,\r\n    rpc_url: \"https://ethereumclassic.network\",\r\n    native_currency: {\r\n      symbol: \"ETH\",\r\n      name: \"Ethereum\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"POA Network Sokol\",\r\n    short_name: \"poa\",\r\n    chain: \"POA\",\r\n    network: \"sokol\",\r\n    chain_id: 77,\r\n    network_id: 77,\r\n    rpc_url: \"https://sokol.poa.network\",\r\n    native_currency: {\r\n      symbol: \"POA\",\r\n      name: \"POA\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"POA Network Core\",\r\n    short_name: \"skl\",\r\n    chain: \"POA\",\r\n    network: \"core\",\r\n    chain_id: 99,\r\n    network_id: 99,\r\n    rpc_url: \"https://core.poa.network\",\r\n    native_currency: {\r\n      symbol: \"POA\",\r\n      name: \"POA\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"xDAI Chain\",\r\n    short_name: \"xdai\",\r\n    chain: \"POA\",\r\n    network: \"dai\",\r\n    chain_id: 100,\r\n    network_id: 100,\r\n    rpc_url: \"https://dai.poa.network\",\r\n    native_currency: {\r\n      symbol: \"xDAI\",\r\n      name: \"xDAI\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Callisto Mainnet\",\r\n    short_name: \"clo\",\r\n    chain: \"callisto\",\r\n    network: \"mainnet\",\r\n    chain_id: 820,\r\n    network_id: 1,\r\n    rpc_url: \"https://clo-geth.0xinfra.com/\",\r\n    native_currency: {\r\n      symbol: \"CLO\",\r\n      name: \"CLO\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"Binance Smart Chain\",\r\n    short_name: \"bsc\",\r\n    chain: \"smartchain\",\r\n    network: \"mainnet\",\r\n    chain_id: 56,\r\n    network_id: 56,\r\n    rpc_url: \"https://bsc-dataseed1.defibit.io/\",\r\n    native_currency: {\r\n      symbol: \"BNB\",\r\n      name: \"BNB\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n  {\r\n    name: \"BSC TestNet\",\r\n    short_name: \"bsc\",\r\n    chain: \"smartchain\",\r\n    network: \"mainnet\",\r\n    chain_id: 97,\r\n    network_id: 97,\r\n    rpc_url: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\r\n    native_currency: {\r\n      symbol: \"BNB\",\r\n      name: \"BNB\",\r\n      decimals: \"18\",\r\n      contractAddress: \"\",\r\n      balance: \"\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction getChainData(chainId) {\r\n  if (!chainId) {\r\n    return null;\r\n  }\r\n  const chainData = supportedChains.filter(\r\n    (chain) => chain.chain_id === chainId\r\n  )[0];\r\n\r\n  console.log(\"chainId = \", chainId);\r\n  if (!chainData) {\r\n    throw new Error(\"ChainId missing or not supported\");\r\n  }\r\n\r\n  const API_KEY = \"460f40a260564ac4a4f4b3fffb032dad\";\r\n\r\n  if (\r\n    chainData.rpc_url.includes(\"infura.io\") &&\r\n    chainData.rpc_url.includes(\"%API_KEY%\") &&\r\n    API_KEY\r\n  ) {\r\n    const rpcUrl = chainData.rpc_url.replace(\"%API_KEY%\", API_KEY);\r\n\r\n    return {\r\n      ...chainData,\r\n      rpc_url: rpcUrl,\r\n    };\r\n  }\r\n\r\n  return chainData;\r\n}\r\nfunction ellipseAddress(address = \"\", width = 10) {\r\n  if (!address) {\r\n    return \"\";\r\n  }\r\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\r\n}\r\nconst INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider, // required\r\n    options: {\r\n      infuraId: INFURA_ID, // required\r\n    },\r\n  },\r\n  \"custom-walletlink\": {\r\n    display: {\r\n      logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\r\n      name: \"Coinbase\",\r\n      description: \"Connect to Coinbase Wallet (not Coinbase App)\",\r\n    },\r\n    options: {\r\n      appName: \"Coinbase\", // Your app name\r\n      networkUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n      chainId: 1,\r\n    },\r\n    package: WalletLink,\r\n    connector: async (_, options) => {\r\n      const { appName, networkUrl, chainId } = options;\r\n      const walletLink = new WalletLink({\r\n        appName,\r\n      });\r\n      const provider = walletLink.makeWeb3Provider(networkUrl, chainId);\r\n      await provider.enable();\r\n      return provider;\r\n    },\r\n  },\r\n};\r\nlet web3Modal;\r\nif (typeof window !== \"undefined\") {\r\n  web3Modal = new Web3Modal({\r\n    //network: 'mainnet', // optional\r\n    cacheProvider: true,\r\n    providerOptions, // required\r\n    theme: \"dark\",\r\n  });\r\n}\r\n\r\nconst initialState = {\r\n  provider: null,\r\n  web3Provider: null,\r\n  address: null,\r\n  chainId: null,\r\n};\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_WEB3_PROVIDER\":\r\n      return {\r\n        ...state,\r\n        provider: action.provider,\r\n        web3Provider: action.web3Provider,\r\n        address: action.address,\r\n        chainId: action.chainId,\r\n      };\r\n    case \"SET_ADDRESS\":\r\n      return {\r\n        ...state,\r\n        address: action.address,\r\n      };\r\n    case \"SET_CHAIN_ID\":\r\n      return {\r\n        ...state,\r\n        chainId: action.chainId,\r\n      };\r\n    case \"RESET_WEB3_PROVIDER\":\r\n      return initialState;\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\nexport const Web3Modals = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { provider, web3Provider, address, chainId } = state;\r\n\r\n  const dispatcher = useDispatch();\r\n\r\n  const connect = useCallback(\r\n    async function () {\r\n      // This is the initial `provider` that is returned when\r\n      // using web3Modal to connect. Can be MetaMask or WalletConnect.\r\n      const provider = await web3Modal.connect();\r\n\r\n      // We plug the initial `provider` into ethers.js and get back\r\n      // a Web3Provider. This will add on methods from ethers.js and\r\n      // event listeners such as `.on()` will be different.\r\n      const web3Provider = new providers.Web3Provider(provider);\r\n\r\n      const signer = web3Provider.getSigner();\r\n      const address = await signer.getAddress();\r\n\r\n      const network = await web3Provider.getNetwork();\r\n\r\n      dispatch({\r\n        type: \"SET_WEB3_PROVIDER\",\r\n        provider,\r\n        web3Provider,\r\n        address,\r\n        chainId: network.chainId,\r\n      });\r\n\r\n      dispatcher({\r\n        type: \"SET_WALLET\",\r\n        payload: provider,\r\n      });\r\n\r\n      dispatcher({\r\n        type: \"SET_ADDRESS\",\r\n        payload: address,\r\n      });\r\n    },\r\n    [dispatcher]\r\n  );\r\n\r\n  const disconnect = useCallback(\r\n    async function () {\r\n      await web3Modal.clearCachedProvider();\r\n      if (provider?.disconnect && typeof provider.disconnect === \"function\") {\r\n        await provider.disconnect();\r\n      }\r\n      dispatch({\r\n        type: \"RESET_WEB3_PROVIDER\",\r\n      });\r\n    },\r\n    [provider]\r\n  );\r\n\r\n  // Auto connect to the cached provider\r\n  /*\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      connect();\r\n    }\r\n  }, [connect]);\r\n  */\r\n\r\n  // A `provider` should come with EIP-1193 events. We'll listen for those events\r\n  // here so that when a user switches accounts or networks, we can update the\r\n  // local React state with that new information.\r\n  useEffect(() => {\r\n    if (provider?.on) {\r\n      const handleAccountsChanged = (accounts) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(\"accountsChanged\", accounts);\r\n        dispatch({\r\n          type: \"SET_ADDRESS\",\r\n          address: accounts[0],\r\n        });\r\n      };\r\n\r\n      // https://docs.ethers.io/v5/concepts/best-practices/#best-practices--network-changes\r\n      const handleChainChanged = (_hexChainId) => {\r\n        window.location.reload();\r\n      };\r\n\r\n      const handleDisconnect = (error) => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(\"disconnect\", error);\r\n        disconnect();\r\n      };\r\n\r\n      provider.on(\"accountsChanged\", handleAccountsChanged);\r\n      provider.on(\"chainChanged\", handleChainChanged);\r\n      provider.on(\"disconnect\", handleDisconnect);\r\n\r\n      // Subscription Cleanup\r\n      return () => {\r\n        if (provider.removeListener) {\r\n          provider.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n          provider.removeListener(\"chainChanged\", handleChainChanged);\r\n          provider.removeListener(\"disconnect\", handleDisconnect);\r\n        }\r\n      };\r\n    }\r\n  }, [provider, disconnect]);\r\n\r\n  const chainData = getChainData(chainId);\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"w-full\">\r\n        {web3Provider ? (\r\n          <Button\r\n            className=\"bg-red-600 h-35 rounded-xl text-white text-18 px-5\"\r\n            type=\"button\"\r\n            onClick={disconnect}\r\n          >\r\n            DISCONNECT\r\n          </Button>\r\n        ) : (\r\n          <Button className=\"text-ellipsis\" onClick={connect}>\r\n            Connect Wallet\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className=\"w-full\">\r\n        {address && (\r\n          <div className=\"grid\">\r\n            <div>\r\n              <p className=\"mb-1 text-white\">Network:</p>\r\n              <p className=\"text-white\">{chainData?.name}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"mb-1 text-white\">Address:</p>\r\n              <p className=\"text-white\">{ellipseAddress(address)}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"w-full\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Web3Modals;\r\n\r\nexport const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      const obj = {\r\n        status: \"ðð½ Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n      return obj;\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"ð¥ \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            ð¦{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              href={`https://metamask.io/download.html`}\r\n              rel=\"noreferrer\"\r\n            >\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            ð¦{\" \"}\r\n            <a\r\n              target=\"_blank\"\r\n              href={`https://metamask.io/download.html`}\r\n              rel=\"noreferrer\"\r\n            >\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nconst stakingContractInstance = new web3.eth.Contract(\r\n  stakeAbi,\r\n  stakingContractAddress\r\n);\r\nconst tokenContractInstance = new web3.eth.Contract(\r\n  tokenABI,\r\n  tokenContractAddress\r\n);\r\n\r\nconst staking2ContractInstance = new web3.eth.Contract(\r\n    stake2Abi,\r\n    staking2ContractAddress\r\n);\r\n\r\nexport const getUserBalance = async (address) => {\r\n  const _balance = await tokenContractInstance.methods\r\n    .balanceOf(address)\r\n    .call();\r\n  return web3.utils.fromWei(_balance, \"ether\");\r\n};\r\n\r\nexport const approve = async (address) => {\r\n  return tokenContractInstance.methods\r\n    .approve(stakingContractAddress, MaxUint256)\r\n    .send({ from: address });\r\n};\r\n\r\nexport const isApproved = async (address) => {\r\n  const _allowance = await tokenContractInstance.methods\r\n    .allowance(address, stakingContractAddress)\r\n    .call();\r\n  return _allowance - MaxUint256 === 0;\r\n};\r\n\r\nexport const stake = (address, amount) => {\r\n  return stakingContractInstance.methods\r\n    .stake(web3.utils.toWei(amount))\r\n    .send({ from: address });\r\n};\r\nexport const harvest = (address) => {\r\n  return stakingContractInstance.methods.getReward().send({ from: address });\r\n};\r\n\r\nexport const withdraw = (address, amount) => {\r\n  return stakingContractInstance.methods\r\n    .withdraw(web3.utils.toWei(amount))\r\n    .send({ from: address });\r\n};\r\n\r\nexport const getReward = (address) => {\r\n  return stakingContractInstance.methods.earned(address).call();\r\n};\r\n\r\nexport const getUserDepositedBalance = async (address) => {\r\n  const _balance = await stakingContractInstance.methods\r\n    .balanceOf(address)\r\n    .call();\r\n  return web3.utils.fromWei(_balance, \"ether\");\r\n};\r\n\r\nexport const getTotalLockedBalance = async () => {\r\n  const _balance = await tokenContractInstance.methods\r\n    .balanceOf(stakingContractAddress)\r\n    .call();\r\n  return web3.utils.fromWei(_balance, \"ether\");\r\n};\r\n\r\nexport const getTotalLockedBalance2 = async () => {\r\n  const _balance = await staking2ContractInstance.methods\r\n      .getTotalLockedAmount()\r\n      .call();\r\n  return web3.utils.fromWei(_balance, \"ether\");\r\n};\r\n\r\nexport const getUserDepositedBalance2 = async (address) => {\r\n  const _balance = await staking2ContractInstance.methods\r\n      .balanceOf(address)\r\n      .call();\r\n  return _balance\r\n};\r\n\r\nexport const approve2 = async (address) => {\r\n  return tokenContractInstance.methods\r\n      .approve(staking2ContractAddress, MaxUint256)\r\n      .send({ from: address });\r\n};\r\n\r\nexport const isApproved2 = async (address) => {\r\n  const _allowance = await tokenContractInstance.methods\r\n      .allowance(address, staking2ContractAddress)\r\n      .call();\r\n  return _allowance - MaxUint256 === 0;\r\n};\r\n\r\nexport const stake2 = (address, amount, apr) => {\r\n  return staking2ContractInstance.methods\r\n      .stake(web3.utils.toWei(amount), apr)\r\n      .send({ from: address });\r\n};\r\nexport const harvest2 = (address, stakingId) => {\r\n  return staking2ContractInstance.methods.getReward(stakingId).send({ from: address });\r\n};\r\n\r\nexport const withdraw2 = (address, stakingId) => {\r\n  return staking2ContractInstance.methods\r\n      .unstake(stakingId)\r\n      .send({ from: address });\r\n};\r\n\r\nexport const getReward2 = (stakingId) => {\r\n  return staking2ContractInstance.methods.getReward(stakingId).call();\r\n};\r\n\r\nexport const getStakingList = async (account) => {\r\n  const _balance = await staking2ContractInstance.methods\r\n      .balanceOf(account)\r\n      .call({ from: account });\r\n  let list = [], _userReward = 0, _depositedAmount = 0;\r\n  for (let i = 0; i < _balance; i ++) {\r\n    const stakingId = await staking2ContractInstance.methods\r\n        .stakingOfOwnerByIndex(account, i)\r\n        .call({ from: account });\r\n    const stakingInfo = await staking2ContractInstance.methods\r\n        .stakingById(stakingId)\r\n        .call({ from: account });\r\n\r\n    const claimableAmount = await staking2ContractInstance.methods\r\n        .claimableAmount(stakingId)\r\n        .call({ from: account });\r\n\r\n    _userReward += parseFloat(claimableAmount);\r\n    console.log('stakingInfo.amounnt', stakingInfo.amount)\r\n    _depositedAmount += parseFloat(web3.utils.fromWei(stakingInfo.amount, \"ether\"));\r\n    list.push({...stakingInfo, amount : web3.utils.fromWei(stakingInfo.amount, \"ether\"), claimableAmount: parseFloat(web3.utils.fromWei(claimableAmount, \"ether\")).toFixed(3)});\r\n  }\r\n  console.log('deposited amounts---', _depositedAmount)\r\n  return [list, _userReward, _depositedAmount];\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}