{"ast":null,"code":"var n,\n  l,\n  u,\n  i,\n  t,\n  o,\n  r,\n  f,\n  e = {},\n  c = [],\n  s = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction a(n, l) {\n  for (var u in l) n[u] = l[u];\n  return n;\n}\nfunction h(n) {\n  var l = n.parentNode;\n  l && l.removeChild(n);\n}\nfunction v(l, u, i) {\n  var t,\n    o,\n    r,\n    f = {};\n  for (r in u) \"key\" == r ? t = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n  if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), \"function\" == typeof l && null != l.defaultProps) for (r in l.defaultProps) void 0 === f[r] && (f[r] = l.defaultProps[r]);\n  return y(l, f, t, o, null);\n}\nfunction y(n, i, t, o, r) {\n  var f = {\n    type: n,\n    props: i,\n    key: t,\n    ref: o,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    __d: void 0,\n    __c: null,\n    __h: null,\n    constructor: void 0,\n    __v: null == r ? ++u : r\n  };\n  return null == r && null != l.vnode && l.vnode(f), f;\n}\nfunction p() {\n  return {\n    current: null\n  };\n}\nfunction d(n) {\n  return n.children;\n}\nfunction _(n, l) {\n  this.props = n, this.context = l;\n}\nfunction k(n, l) {\n  if (null == l) return n.__ ? k(n.__, n.__.__k.indexOf(n) + 1) : null;\n  for (var u; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n  return \"function\" == typeof n.type ? k(n) : null;\n}\nfunction b(n) {\n  var l, u;\n  if (null != (n = n.__) && null != n.__c) {\n    for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) {\n      n.__e = n.__c.base = u.__e;\n      break;\n    }\n    return b(n);\n  }\n}\nfunction m(n) {\n  (!n.__d && (n.__d = !0) && t.push(n) && !g.__r++ || r !== l.debounceRendering) && ((r = l.debounceRendering) || o)(g);\n}\nfunction g() {\n  for (var n; g.__r = t.length;) n = t.sort(function (n, l) {\n    return n.__v.__b - l.__v.__b;\n  }), t = [], n.some(function (n) {\n    var l, u, i, t, o, r;\n    n.__d && (o = (t = (l = n).__v).__e, (r = l.__P) && (u = [], (i = a({}, t)).__v = t.__v + 1, j(r, t, i, l.__n, void 0 !== r.ownerSVGElement, null != t.__h ? [o] : null, u, null == o ? k(t) : o, t.__h), z(u, t), t.__e != o && b(t)));\n  });\n}\nfunction w(n, l, u, i, t, o, r, f, s, a) {\n  var h,\n    v,\n    p,\n    _,\n    b,\n    m,\n    g,\n    w = i && i.__k || c,\n    A = w.length;\n  for (u.__k = [], h = 0; h < l.length; h++) if (null != (_ = u.__k[h] = null == (_ = l[h]) || \"boolean\" == typeof _ ? null : \"string\" == typeof _ || \"number\" == typeof _ || \"bigint\" == typeof _ ? y(null, _, null, null, _) : Array.isArray(_) ? y(d, {\n    children: _\n  }, null, null, null) : _.__b > 0 ? y(_.type, _.props, _.key, null, _.__v) : _)) {\n    if (_.__ = u, _.__b = u.__b + 1, null === (p = w[h]) || p && _.key == p.key && _.type === p.type) w[h] = void 0;else for (v = 0; v < A; v++) {\n      if ((p = w[v]) && _.key == p.key && _.type === p.type) {\n        w[v] = void 0;\n        break;\n      }\n      p = null;\n    }\n    j(n, _, p = p || e, t, o, r, f, s, a), b = _.__e, (v = _.ref) && p.ref != v && (g || (g = []), p.ref && g.push(p.ref, null, _), g.push(v, _.__c || b, _)), null != b ? (null == m && (m = b), \"function\" == typeof _.type && _.__k === p.__k ? _.__d = s = x(_, s, n) : s = P(n, _, p, w, b, s), \"function\" == typeof u.type && (u.__d = s)) : s && p.__e == s && s.parentNode != n && (s = k(p));\n  }\n  for (u.__e = m, h = A; h--;) null != w[h] && (\"function\" == typeof u.type && null != w[h].__e && w[h].__e == u.__d && (u.__d = k(i, h + 1)), N(w[h], w[h]));\n  if (g) for (h = 0; h < g.length; h++) M(g[h], g[++h], g[++h]);\n}\nfunction x(n, l, u) {\n  for (var i, t = n.__k, o = 0; t && o < t.length; o++) (i = t[o]) && (i.__ = n, l = \"function\" == typeof i.type ? x(i, l, u) : P(u, i, i, t, i.__e, l));\n  return l;\n}\nfunction A(n, l) {\n  return l = l || [], null == n || \"boolean\" == typeof n || (Array.isArray(n) ? n.some(function (n) {\n    A(n, l);\n  }) : l.push(n)), l;\n}\nfunction P(n, l, u, i, t, o) {\n  var r, f, e;\n  if (void 0 !== l.__d) r = l.__d, l.__d = void 0;else if (null == u || t != o || null == t.parentNode) n: if (null == o || o.parentNode !== n) n.appendChild(t), r = null;else {\n    for (f = o, e = 0; (f = f.nextSibling) && e < i.length; e += 2) if (f == t) break n;\n    n.insertBefore(t, o), r = o;\n  }\n  return void 0 !== r ? r : t.nextSibling;\n}\nfunction C(n, l, u, i, t) {\n  var o;\n  for (o in u) \"children\" === o || \"key\" === o || o in l || H(n, o, null, u[o], i);\n  for (o in l) t && \"function\" != typeof l[o] || \"children\" === o || \"key\" === o || \"value\" === o || \"checked\" === o || u[o] === l[o] || H(n, o, l[o], u[o], i);\n}\nfunction $(n, l, u) {\n  \"-\" === l[0] ? n.setProperty(l, u) : n[l] = null == u ? \"\" : \"number\" != typeof u || s.test(l) ? u : u + \"px\";\n}\nfunction H(n, l, u, i, t) {\n  var o;\n  n: if (\"style\" === l) {\n    if (\"string\" == typeof u) n.style.cssText = u;else {\n      if (\"string\" == typeof i && (n.style.cssText = i = \"\"), i) for (l in i) u && l in u || $(n.style, l, \"\");\n      if (u) for (l in u) i && u[l] === i[l] || $(n.style, l, u[l]);\n    }\n  } else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? i || n.addEventListener(l, o ? T : I, o) : n.removeEventListener(l, o ? T : I, o);else if (\"dangerouslySetInnerHTML\" !== l) {\n    if (t) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");else if (\"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && l in n) try {\n      n[l] = null == u ? \"\" : u;\n      break n;\n    } catch (n) {}\n    \"function\" == typeof u || (null != u && (!1 !== u || \"a\" === l[0] && \"r\" === l[1]) ? n.setAttribute(l, u) : n.removeAttribute(l));\n  }\n}\nfunction I(n) {\n  this.l[n.type + !1](l.event ? l.event(n) : n);\n}\nfunction T(n) {\n  this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction j(n, u, i, t, o, r, f, e, c) {\n  var s,\n    h,\n    v,\n    y,\n    p,\n    k,\n    b,\n    m,\n    g,\n    x,\n    A,\n    P = u.type;\n  if (void 0 !== u.constructor) return null;\n  null != i.__h && (c = i.__h, e = u.__e = i.__e, u.__h = null, r = [e]), (s = l.__b) && s(u);\n  try {\n    n: if (\"function\" == typeof P) {\n      if (m = u.props, g = (s = P.contextType) && t[s.__c], x = s ? g ? g.props.value : s.__ : t, i.__c ? b = (h = u.__c = i.__c).__ = h.__E : (\"prototype\" in P && P.prototype.render ? u.__c = h = new P(m, x) : (u.__c = h = new _(m, x), h.constructor = P, h.render = O), g && g.sub(h), h.props = m, h.state || (h.state = {}), h.context = x, h.__n = t, v = h.__d = !0, h.__h = []), null == h.__s && (h.__s = h.state), null != P.getDerivedStateFromProps && (h.__s == h.state && (h.__s = a({}, h.__s)), a(h.__s, P.getDerivedStateFromProps(m, h.__s))), y = h.props, p = h.state, v) null == P.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), null != h.componentDidMount && h.__h.push(h.componentDidMount);else {\n        if (null == P.getDerivedStateFromProps && m !== y && null != h.componentWillReceiveProps && h.componentWillReceiveProps(m, x), !h.__e && null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(m, h.__s, x) || u.__v === i.__v) {\n          h.props = m, h.state = h.__s, u.__v !== i.__v && (h.__d = !1), h.__v = u, u.__e = i.__e, u.__k = i.__k, u.__k.forEach(function (n) {\n            n && (n.__ = u);\n          }), h.__h.length && f.push(h);\n          break n;\n        }\n        null != h.componentWillUpdate && h.componentWillUpdate(m, h.__s, x), null != h.componentDidUpdate && h.__h.push(function () {\n          h.componentDidUpdate(y, p, k);\n        });\n      }\n      h.context = x, h.props = m, h.state = h.__s, (s = l.__r) && s(u), h.__d = !1, h.__v = u, h.__P = n, s = h.render(h.props, h.state, h.context), h.state = h.__s, null != h.getChildContext && (t = a(a({}, t), h.getChildContext())), v || null == h.getSnapshotBeforeUpdate || (k = h.getSnapshotBeforeUpdate(y, p)), A = null != s && s.type === d && null == s.key ? s.props.children : s, w(n, Array.isArray(A) ? A : [A], u, i, t, o, r, f, e, c), h.base = u.__e, u.__h = null, h.__h.length && f.push(h), b && (h.__E = h.__ = null), h.__e = !1;\n    } else null == r && u.__v === i.__v ? (u.__k = i.__k, u.__e = i.__e) : u.__e = L(i.__e, u, i, t, o, r, f, c);\n    (s = l.diffed) && s(u);\n  } catch (n) {\n    u.__v = null, (c || null != r) && (u.__e = e, u.__h = !!c, r[r.indexOf(e)] = null), l.__e(n, u, i);\n  }\n}\nfunction z(n, u) {\n  l.__c && l.__c(u, n), n.some(function (u) {\n    try {\n      n = u.__h, u.__h = [], n.some(function (n) {\n        n.call(u);\n      });\n    } catch (n) {\n      l.__e(n, u.__v);\n    }\n  });\n}\nfunction L(l, u, i, t, o, r, f, c) {\n  var s,\n    a,\n    v,\n    y = i.props,\n    p = u.props,\n    d = u.type,\n    _ = 0;\n  if (\"svg\" === d && (o = !0), null != r) for (; _ < r.length; _++) if ((s = r[_]) && \"setAttribute\" in s == !!d && (d ? s.localName === d : 3 === s.nodeType)) {\n    l = s, r[_] = null;\n    break;\n  }\n  if (null == l) {\n    if (null === d) return document.createTextNode(p);\n    l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", d) : document.createElement(d, p.is && p), r = null, c = !1;\n  }\n  if (null === d) y === p || c && l.data === p || (l.data = p);else {\n    if (r = r && n.call(l.childNodes), a = (y = i.props || e).dangerouslySetInnerHTML, v = p.dangerouslySetInnerHTML, !c) {\n      if (null != r) for (y = {}, _ = 0; _ < l.attributes.length; _++) y[l.attributes[_].name] = l.attributes[_].value;\n      (v || a) && (v && (a && v.__html == a.__html || v.__html === l.innerHTML) || (l.innerHTML = v && v.__html || \"\"));\n    }\n    if (C(l, p, y, o, c), v) u.__k = [];else if (_ = u.props.children, w(l, Array.isArray(_) ? _ : [_], u, i, t, o && \"foreignObject\" !== d, r, f, r ? r[0] : i.__k && k(i, 0), c), null != r) for (_ = r.length; _--;) null != r[_] && h(r[_]);\n    c || (\"value\" in p && void 0 !== (_ = p.value) && (_ !== l.value || \"progress\" === d && !_ || \"option\" === d && _ !== y.value) && H(l, \"value\", _, y.value, !1), \"checked\" in p && void 0 !== (_ = p.checked) && _ !== l.checked && H(l, \"checked\", _, y.checked, !1));\n  }\n  return l;\n}\nfunction M(n, u, i) {\n  try {\n    \"function\" == typeof n ? n(u) : n.current = u;\n  } catch (n) {\n    l.__e(n, i);\n  }\n}\nfunction N(n, u, i) {\n  var t, o;\n  if (l.unmount && l.unmount(n), (t = n.ref) && (t.current && t.current !== n.__e || M(t, null, u)), null != (t = n.__c)) {\n    if (t.componentWillUnmount) try {\n      t.componentWillUnmount();\n    } catch (n) {\n      l.__e(n, u);\n    }\n    t.base = t.__P = null;\n  }\n  if (t = n.__k) for (o = 0; o < t.length; o++) t[o] && N(t[o], u, \"function\" != typeof n.type);\n  i || null == n.__e || h(n.__e), n.__e = n.__d = void 0;\n}\nfunction O(n, l, u) {\n  return this.constructor(n, u);\n}\nfunction S(u, i, t) {\n  var o, r, f;\n  l.__ && l.__(u, i), r = (o = \"function\" == typeof t) ? null : t && t.__k || i.__k, f = [], j(i, u = (!o && t || i).__k = v(d, null, [u]), r || e, e, void 0 !== i.ownerSVGElement, !o && t ? [t] : r ? null : i.firstChild ? n.call(i.childNodes) : null, f, !o && t ? t : r ? r.__e : i.firstChild, o), z(f, u);\n}\nfunction q(n, l) {\n  S(n, l, q);\n}\nfunction B(l, u, i) {\n  var t,\n    o,\n    r,\n    f = a({}, l.props);\n  for (r in u) \"key\" == r ? t = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n  return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), y(l.type, f, t || l.key, o || l.ref, null);\n}\nfunction D(n, l) {\n  var u = {\n    __c: l = \"__cC\" + f++,\n    __: n,\n    Consumer: function (n, l) {\n      return n.children(l);\n    },\n    Provider: function (n) {\n      var u, i;\n      return this.getChildContext || (u = [], (i = {})[l] = this, this.getChildContext = function () {\n        return i;\n      }, this.shouldComponentUpdate = function (n) {\n        this.props.value !== n.value && u.some(m);\n      }, this.sub = function (n) {\n        u.push(n);\n        var l = n.componentWillUnmount;\n        n.componentWillUnmount = function () {\n          u.splice(u.indexOf(n), 1), l && l.call(n);\n        };\n      }), n.children;\n    }\n  };\n  return u.Provider.__ = u.Consumer.contextType = u;\n}\nn = c.slice, l = {\n  __e: function (n, l, u, i) {\n    for (var t, o, r; l = l.__;) if ((t = l.__c) && !t.__) try {\n      if ((o = t.constructor) && null != o.getDerivedStateFromError && (t.setState(o.getDerivedStateFromError(n)), r = t.__d), null != t.componentDidCatch && (t.componentDidCatch(n, i || {}), r = t.__d), r) return t.__E = t;\n    } catch (l) {\n      n = l;\n    }\n    throw n;\n  }\n}, u = 0, i = function (n) {\n  return null != n && void 0 === n.constructor;\n}, _.prototype.setState = function (n, l) {\n  var u;\n  u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = a({}, this.state), \"function\" == typeof n && (n = n(a({}, u), this.props)), n && a(u, n), null != n && this.__v && (l && this.__h.push(l), m(this));\n}, _.prototype.forceUpdate = function (n) {\n  this.__v && (this.__e = !0, n && this.__h.push(n), m(this));\n}, _.prototype.render = d, t = [], o = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, g.__r = 0, f = 0;\nexport { S as render, q as hydrate, v as createElement, v as h, d as Fragment, p as createRef, i as isValidElement, _ as Component, B as cloneElement, D as createContext, A as toChildArray, l as options };","map":{"version":3,"sources":["../src/constants.js","../src/util.js","../src/options.js","../src/create-element.js","../src/component.js","../src/create-context.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/render.js","../src/clone-element.js","../src/diff/catch-error.js"],"names":["EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","slice","options","vnodeId","createElement","type","children","normalizedProps","key","ref","arguments","length","call","defaultProps","undefined","createVNode","original","vnode","constructor","createRef","current","Fragment","isValidElement","Component","context","prototype","setState","update","callback","s","this","state","push","enqueueRender","forceUpdate","render","getDomSibling","childIndex","indexOf","sibling","component","oldDom","parentDom","commitQueue","oldVNode","diff","ownerSVGElement","commitRoot","updateParentDomPointers","base","child","rerenderQueue","defer","Promise","then","bind","resolve","setTimeout","prevDebounce","c","process","debounceRendering","queue","sort","a","b","some","createContext","defaultValue","contextId","Consumer","contextValue","Provider","getChildContext","subs","ctx","shouldComponentUpdate","_props","value","sub","old","componentWillUnmount","splice","contextType","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","toChildArray","out","nextDom","outer","appendChild","sibDom","nextSibling","insertBefore","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","eventProxyCapture","eventProxy","addEventListener","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","newType","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","doRender","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","forEach","componentWillUpdate","componentDidUpdate","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","oldHtml","dangerouslySetInnerHTML","newHtml","attributes","innerHTML","checked","parentVNode","skipRemove","r","replaceNode","firstChild","cloneElement","error","errorInfo","ctor","handled","getDerivedStateFromError","componentDidCatch"],"mappings":"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","sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"]},"metadata":{},"sourceType":"module"}