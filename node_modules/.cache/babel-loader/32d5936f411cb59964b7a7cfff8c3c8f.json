{"ast":null,"code":"var _jsxFileName = \"D:\\\\jobStuff\\\\hoichistakes\\\\src\\\\components\\\\Molecules\\\\staking\\\\DepositWithdrawSection2.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-expressions */\nimport { useState, useEffect } from \"react\";\nimport { BackgroundButton } from \"../../BackgroundButton/BackgroundButton\";\nimport { TEXT_COLORS } from \"../../../theme/theme\";\nimport { Input } from \"../../Atoms/Input\";\nimport { getUserBalance } from \"../../../Utils/walletInteract\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isApproved2, stake2, withdraw2, harvest2, approve2 } from \"../../../Utils/walletInteract\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { DEFAULT_STAKING_OPTION, StakingTime } from \"./StakingTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GO_TO_DEPOSIT = true;\nconst GO_TO_WITHDRAW = false;\nconst lockTimes = [\"7 days\", \"15 days\", \"1 month\", \"3 months\"];\nexport const DepositWithdrawSection2 = _ref => {\n  _s();\n  let {\n    isV2Staking = false,\n    isDepositSection = true,\n    toggleDepositSection = () => {}\n  } = _ref;\n  const [userBalance, setUserBalance] = useState(100);\n  // const [stakintList, setStakingList] = useState([]);\n  const text = isDepositSection ? \"Deposit\" : \"Withdraw\";\n  //const approveText = _isApproved ? \"Approve\" : \"Deposit\";\n  const [approvalStatus, setApprovalStatus] = useState(false);\n  const [stakingTime, setStakingTime] = useState(DEFAULT_STAKING_OPTION);\n  const [inputAmout, setInputAmount] = useState(0);\n  const currentAddress = useSelector(state => state.address);\n  const userDepositedBalance = useSelector(state => state.totalDeposited);\n  const stakingList = useSelector(state => [...state.stakingList]);\n  const dispatch = useDispatch();\n  const handleDepositClick = () => {\n    if (approvalStatus) {\n      if (inputAmout === 0) return;\n      const transaction = toast.loading(\"Tx pending\");\n      stake2(currentAddress, inputAmout, stakingTime).then(res => {\n        toast.update(transaction, {\n          render: \"Succesfully staked\",\n          type: \"success\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      }).catch(error => {\n        if (error.code === 4001) {\n          toast.update(transaction, {\n            render: \"MetaMask Tx Signature: User denied transaction signature.\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        } else {\n          toast.update(transaction, {\n            render: error.message || \"Error\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        }\n      });\n    } else {\n      const transaction = toast.loading(\"Transaction pending\");\n      approve2(currentAddress).then(res => {\n        loadUserData();\n        toast.update(transaction, {\n          render: \"Successfully approved\",\n          type: \"success\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      }).catch(error => {\n        if (error.code === 4001) {\n          toast.update(transaction, {\n            render: \"MetaMask Tx Signature: User denied transaction signature.\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        } else {\n          toast.update(transaction, {\n            render: error.message || \"Error\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        }\n      });\n    }\n  };\n  const handleDepositAllClick = () => {\n    if (approvalStatus) {\n      if (userBalance === 0) return;\n      const transaction = toast.loading(\"Transaction pending\");\n      stake2(currentAddress, userBalance).then(res => {\n        loadUserData();\n        toast.update(transaction, {\n          render: \"Successfully staked all\",\n          type: \"success\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      }).catch(error => {\n        if (error.code === 4001) {\n          toast.update(transaction, {\n            render: \"MetaMask Tx Signature: User denied transaction signature.\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        } else {\n          toast.update(transaction, {\n            render: error.message || \"Error\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        }\n      });\n    } else {\n      const transaction = toast.loading(\"Transaction pending\");\n      approve2(currentAddress).then(res => {\n        toast.update(transaction, {\n          render: \"Successfully approved\",\n          type: \"success\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      }).catch(error => {\n        if (error.code === 4001) {\n          toast.update(transaction, {\n            render: \"MetaMask Tx Signature: User denied transaction signature.\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        } else {\n          toast.update(transaction, {\n            render: error.message || \"Error\",\n            type: \"error\",\n            isLoading: false,\n            autoClose: 3000\n          });\n        }\n      });\n    }\n  };\n  const handleWithdrawClick = stakingId => {\n    console.log(`hi${userDepositedBalance}`);\n    // if (inputAmout === 0 || userDepositedBalance == 0) return;\n    const transaction = toast.loading(\"Transaction pending\");\n    withdraw2(currentAddress, stakingId).then(res => {\n      loadUserData();\n      toast.update(transaction, {\n        render: \"Successfully withdrawed\",\n        type: \"success\",\n        isLoading: false,\n        autoClose: 3000\n      });\n    }).catch(error => {\n      if (error.code === 4001) {\n        toast.update(transaction, {\n          render: \"MetaMask Tx Signature: User denied transaction signature.\",\n          type: \"error\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      } else {\n        toast.update(transaction, {\n          render: error.message || \"Error\",\n          type: \"error\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      }\n    });\n  };\n  const handleWithdrawAllClick = () => {\n    console.log(`hi ${userDepositedBalance}`);\n    if (userDepositedBalance == 0) return;\n    const transaction = toast.loading(\"Transaction pending\");\n    withdraw2(currentAddress, userDepositedBalance).then(res => {\n      loadUserData();\n      toast.update(transaction, {\n        render: \"Successfully withdrawed all\",\n        type: \"success\",\n        isLoading: false,\n        autoClose: 3000\n      });\n    }).catch(error => {\n      if (error.code === 4001) {\n        toast.update(transaction, {\n          render: \"MetaMask Tx Signature: User denied transaction signature.\",\n          type: \"error\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      } else {\n        toast.update(transaction, {\n          render: error.message || \"Error\",\n          type: \"error\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      }\n    });\n  };\n  const handleHarvestClick = stakingId => {\n    // if (userReward == 0) return;\n    const transaction = toast.loading(\"Transaction pending\");\n    harvest2(currentAddress, stakingId).then(res => {\n      loadUserData();\n      toast.update(transaction, {\n        render: \"Successfully harvested all\",\n        type: \"success\",\n        isLoading: false,\n        autoClose: 3000\n      });\n    }).catch(error => {\n      if (error.code === 4001) {\n        toast.update(transaction, {\n          render: \"MetaMask Tx Signature: User denied transaction signature.\",\n          type: \"error\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      } else {\n        toast.update(transaction, {\n          render: error.message || \"Error\",\n          type: \"error\",\n          isLoading: false,\n          autoClose: 3000\n        });\n      }\n    });\n  };\n  const loadUserData = async () => {\n    console.log('load user data');\n    const _isApproved = await isApproved2(currentAddress);\n    setApprovalStatus(_isApproved);\n    console.log(_isApproved);\n    const _balance = await getUserBalance(currentAddress);\n    setUserBalance(_balance);\n    // const _stakingList = await getStakingList(currentAddress);\n    // console.log('stakingList', _stakingList)\n    // setStakingList([..._stakingList])\n  };\n\n  useEffect(() => {\n    if (currentAddress !== \"\") {\n      loadUserData();\n      console.log(`hi, ${currentAddress}`);\n      console.log(`hi, ${userBalance}`);\n    }\n  }, [currentAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full flex flex-col gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(BackgroundButton, {\n          isGray: !isDepositSection,\n          onClick: () => toggleDepositSection(GO_TO_DEPOSIT),\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BackgroundButton, {\n          isGray: isDepositSection,\n          onClick: () => toggleDepositSection(GO_TO_WITHDRAW),\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `font-noto-sans-regular ${TEXT_COLORS.WHITE}`,\n        children: [\"Balance:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `font-noto-sans-bold ${TEXT_COLORS.PURPLE_DARK}`,\n          children: [userBalance, \" $ HOICHI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), isDepositSection && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          value: inputAmout,\n          placeholder: `HOICHI ${text} Amount...`,\n          onChange: setInputAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(BackgroundButton, {\n            isGray: false,\n            className: \"flex-1\",\n            onClick: () => {\n              if (isDepositSection) {\n                handleDepositClick();\n              } else {\n                // handleWithdrawClick();\n              }\n            },\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BackgroundButton, {\n            isGray: false,\n            className: \"flex-1\",\n            onClick: () => {\n              if (isDepositSection) {\n                handleDepositAllClick();\n              } else {\n                // handleWithdrawAllClick();\n              }\n            },\n            children: `${text} All`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BackgroundButton, {\n            isGray: false,\n            className: \"flex-1\"\n            // onClick={handleHarvestClick}\n            ,\n            children: \"Harvest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true), isDepositSection && isV2Staking && /*#__PURE__*/_jsxDEV(StakingTime, {\n        selected: stakingTime,\n        onSelect: setStakingTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }, this), !isDepositSection && stakingList && stakingList.map(staking => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: staking.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: staking.claimableAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: lockTimes[staking.stakingtype]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BackgroundButton, {\n            isGray: false,\n            className: \"flex-1\",\n            onClick: () => handleWithdrawClick(staking.stakingId),\n            children: \"Unstake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BackgroundButton, {\n            isGray: false,\n            className: \"flex-1\",\n            onClick: () => handleHarvestClick(staking.stakingId),\n            children: \"Harvest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, staking.stakingId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      className: \"text-white\",\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"colored\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(DepositWithdrawSection2, \"XHEiGv60p4cxQyXT+oWPEjVr+nc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = DepositWithdrawSection2;\nvar _c;\n$RefreshReg$(_c, \"DepositWithdrawSection2\");","map":{"version":3,"names":["useState","useEffect","BackgroundButton","TEXT_COLORS","Input","getUserBalance","useDispatch","useSelector","isApproved2","stake2","withdraw2","harvest2","approve2","ToastContainer","toast","DEFAULT_STAKING_OPTION","StakingTime","GO_TO_DEPOSIT","GO_TO_WITHDRAW","lockTimes","DepositWithdrawSection2","isV2Staking","isDepositSection","toggleDepositSection","userBalance","setUserBalance","text","approvalStatus","setApprovalStatus","stakingTime","setStakingTime","inputAmout","setInputAmount","currentAddress","state","address","userDepositedBalance","totalDeposited","stakingList","dispatch","handleDepositClick","transaction","loading","then","res","update","render","type","isLoading","autoClose","catch","error","code","message","loadUserData","handleDepositAllClick","handleWithdrawClick","stakingId","console","log","handleWithdrawAllClick","handleHarvestClick","_isApproved","_balance","WHITE","PURPLE_DARK","map","staking","amount","claimableAmount","stakingtype"],"sources":["D:/jobStuff/hoichistakes/src/components/Molecules/staking/DepositWithdrawSection2.js"],"sourcesContent":["/* eslint-disable no-unused-expressions */\r\nimport { useState, useEffect } from \"react\";\r\nimport { BackgroundButton } from \"../../BackgroundButton/BackgroundButton\";\r\nimport { TEXT_COLORS } from \"../../../theme/theme\";\r\nimport { Input } from \"../../Atoms/Input\";\r\nimport { getUserBalance } from \"../../../Utils/walletInteract\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  isApproved2,\r\n  stake2,\r\n  withdraw2,\r\n  harvest2,\r\n  approve2,\r\n} from \"../../../Utils/walletInteract\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { DEFAULT_STAKING_OPTION, StakingTime } from \"./StakingTime\";\r\nconst GO_TO_DEPOSIT = true;\r\nconst GO_TO_WITHDRAW = false;\r\nconst lockTimes = [\"7 days\", \"15 days\", \"1 month\", \"3 months\"]\r\n\r\nexport const DepositWithdrawSection2 = ({\r\n  isV2Staking = false,\r\n  isDepositSection = true,\r\n  toggleDepositSection = () => { },\r\n}) => {\r\n  const [userBalance, setUserBalance] = useState(100);\r\n  // const [stakintList, setStakingList] = useState([]);\r\n  const text = isDepositSection ? \"Deposit\" : \"Withdraw\";\r\n  //const approveText = _isApproved ? \"Approve\" : \"Deposit\";\r\n  const [approvalStatus, setApprovalStatus] = useState(false);\r\n  const [stakingTime, setStakingTime] = useState(DEFAULT_STAKING_OPTION);\r\n  const [inputAmout, setInputAmount] = useState(0);\r\n  const currentAddress = useSelector((state) => state.address);\r\n  const userDepositedBalance = useSelector((state) => state.totalDeposited);\r\n  const stakingList = useSelector((state) => [...state.stakingList]);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDepositClick = () => {\r\n    if (approvalStatus) {\r\n      if (inputAmout === 0) return;\r\n      const transaction = toast.loading(\"Tx pending\");\r\n      stake2(currentAddress, inputAmout, stakingTime)\r\n        .then((res) => {\r\n          toast.update(transaction, {\r\n            render: \"Succesfully staked\",\r\n            type: \"success\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          if (error.code === 4001) {\r\n            toast.update(transaction, {\r\n              render:\r\n                \"MetaMask Tx Signature: User denied transaction signature.\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          } else {\r\n            toast.update(transaction, {\r\n              render: error.message || \"Error\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      const transaction = toast.loading(\"Transaction pending\");\r\n      approve2(currentAddress)\r\n        .then((res) => {\r\n          loadUserData();\r\n          toast.update(transaction, {\r\n            render: \"Successfully approved\",\r\n            type: \"success\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          if (error.code === 4001) {\r\n            toast.update(transaction, {\r\n              render:\r\n                \"MetaMask Tx Signature: User denied transaction signature.\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          } else {\r\n            toast.update(transaction, {\r\n              render: error.message || \"Error\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  const handleDepositAllClick = () => {\r\n    if (approvalStatus) {\r\n      if (userBalance === 0) return;\r\n      const transaction = toast.loading(\"Transaction pending\");\r\n      stake2(currentAddress, userBalance)\r\n        .then((res) => {\r\n          loadUserData();\r\n          toast.update(transaction, {\r\n            render: \"Successfully staked all\",\r\n            type: \"success\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          if (error.code === 4001) {\r\n            toast.update(transaction, {\r\n              render:\r\n                \"MetaMask Tx Signature: User denied transaction signature.\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          } else {\r\n            toast.update(transaction, {\r\n              render: error.message || \"Error\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      const transaction = toast.loading(\"Transaction pending\");\r\n      approve2(currentAddress)\r\n        .then((res) => {\r\n          toast.update(transaction, {\r\n            render: \"Successfully approved\",\r\n            type: \"success\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          if (error.code === 4001) {\r\n            toast.update(transaction, {\r\n              render:\r\n                \"MetaMask Tx Signature: User denied transaction signature.\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          } else {\r\n            toast.update(transaction, {\r\n              render: error.message || \"Error\",\r\n              type: \"error\",\r\n              isLoading: false,\r\n              autoClose: 3000,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  const handleWithdrawClick = (stakingId) => {\r\n    console.log(`hi${userDepositedBalance}`);\r\n    // if (inputAmout === 0 || userDepositedBalance == 0) return;\r\n    const transaction = toast.loading(\"Transaction pending\");\r\n    withdraw2(currentAddress, stakingId)\r\n      .then((res) => {\r\n        loadUserData();\r\n        toast.update(transaction, {\r\n          render: \"Successfully withdrawed\",\r\n          type: \"success\",\r\n          isLoading: false,\r\n          autoClose: 3000,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.code === 4001) {\r\n          toast.update(transaction, {\r\n            render: \"MetaMask Tx Signature: User denied transaction signature.\",\r\n            type: \"error\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        } else {\r\n          toast.update(transaction, {\r\n            render: error.message || \"Error\",\r\n            type: \"error\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const handleWithdrawAllClick = () => {\r\n    console.log(`hi ${userDepositedBalance}`);\r\n    if (userDepositedBalance == 0) return;\r\n    const transaction = toast.loading(\"Transaction pending\");\r\n    withdraw2(currentAddress, userDepositedBalance)\r\n      .then((res) => {\r\n        loadUserData();\r\n        toast.update(transaction, {\r\n          render: \"Successfully withdrawed all\",\r\n          type: \"success\",\r\n          isLoading: false,\r\n          autoClose: 3000,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.code === 4001) {\r\n          toast.update(transaction, {\r\n            render: \"MetaMask Tx Signature: User denied transaction signature.\",\r\n            type: \"error\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        } else {\r\n          toast.update(transaction, {\r\n            render: error.message || \"Error\",\r\n            type: \"error\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  const handleHarvestClick = (stakingId) => {\r\n    // if (userReward == 0) return;\r\n    const transaction = toast.loading(\"Transaction pending\");\r\n    harvest2(currentAddress, stakingId)\r\n      .then((res) => {\r\n        loadUserData();\r\n        toast.update(transaction, {\r\n          render: \"Successfully harvested all\",\r\n          type: \"success\",\r\n          isLoading: false,\r\n          autoClose: 3000,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.code === 4001) {\r\n          toast.update(transaction, {\r\n            render: \"MetaMask Tx Signature: User denied transaction signature.\",\r\n            type: \"error\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        } else {\r\n          toast.update(transaction, {\r\n            render: error.message || \"Error\",\r\n            type: \"error\",\r\n            isLoading: false,\r\n            autoClose: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const loadUserData = async () => {\r\n    console.log('load user data')\r\n    const _isApproved = await isApproved2(currentAddress);\r\n    setApprovalStatus(_isApproved);\r\n    console.log(_isApproved);\r\n    const _balance = await getUserBalance(currentAddress);\r\n    setUserBalance(_balance);\r\n    // const _stakingList = await getStakingList(currentAddress);\r\n    // console.log('stakingList', _stakingList)\r\n    // setStakingList([..._stakingList])\r\n  };\r\n  useEffect(() => {\r\n    if (currentAddress !== \"\") {\r\n      loadUserData();\r\n      console.log(`hi, ${currentAddress}`);\r\n      console.log(`hi, ${userBalance}`);\r\n    }\r\n  }, [currentAddress]);\r\n  return (\r\n    <div className=\"flex-1\">\r\n      <div className=\"w-full h-full flex flex-col gap-3\">\r\n        <div className=\"flex gap-3\">\r\n          <BackgroundButton\r\n            isGray={!isDepositSection}\r\n            onClick={() => toggleDepositSection(GO_TO_DEPOSIT)}\r\n          >\r\n            Deposit\r\n          </BackgroundButton>\r\n          <BackgroundButton\r\n            isGray={isDepositSection}\r\n            onClick={() => toggleDepositSection(GO_TO_WITHDRAW)}\r\n          >\r\n            Withdraw\r\n          </BackgroundButton>\r\n        </div>\r\n        <p className={`font-noto-sans-regular ${TEXT_COLORS.WHITE}`}>\r\n          Balance:{\" \"}\r\n          <span className={`font-noto-sans-bold ${TEXT_COLORS.PURPLE_DARK}`}>\r\n            {userBalance} $ HOICHI\r\n          </span>\r\n        </p>\r\n        {isDepositSection && <>\r\n          <Input\r\n              type=\"number\"\r\n              value={inputAmout}\r\n              placeholder={`HOICHI ${text} Amount...`}\r\n              onChange={setInputAmount}\r\n          />\r\n          <div className=\"flex justify-between gap-3\">\r\n            <BackgroundButton\r\n                isGray={false}\r\n                className=\"flex-1\"\r\n                onClick={() => {\r\n                  if (isDepositSection) {\r\n                    handleDepositClick();\r\n                  } else {\r\n                    // handleWithdrawClick();\r\n                  }\r\n                }}\r\n            >\r\n              {text}\r\n            </BackgroundButton>\r\n            <BackgroundButton\r\n                isGray={false}\r\n                className=\"flex-1\"\r\n                onClick={() => {\r\n                  if (isDepositSection) {\r\n                    handleDepositAllClick();\r\n                  } else {\r\n                    // handleWithdrawAllClick();\r\n                  }\r\n                }}\r\n            >\r\n              {`${text} All`}\r\n            </BackgroundButton>\r\n            <BackgroundButton\r\n                isGray={false}\r\n                className=\"flex-1\"\r\n                // onClick={handleHarvestClick}\r\n            >\r\n              Harvest\r\n            </BackgroundButton>\r\n          </div>\r\n        </>}\r\n\r\n        {\r\n          isDepositSection && isV2Staking && (\r\n            <StakingTime selected={stakingTime}  onSelect={setStakingTime}/>\r\n          )\r\n        }\r\n        {!isDepositSection && stakingList && stakingList.map(staking => {\r\n          return <div key={staking.stakingId} className=\"flex justify-between gap-3\">\r\n            <p>{staking.amount}</p>\r\n            <p>{staking.claimableAmount}</p>\r\n            <p>{lockTimes[staking.stakingtype]}</p>\r\n            <BackgroundButton\r\n                isGray={false}\r\n                className=\"flex-1\"\r\n                onClick={() => handleWithdrawClick(staking.stakingId)}\r\n            >\r\n              Unstake\r\n            </BackgroundButton>\r\n            <BackgroundButton\r\n                isGray={false}\r\n                className=\"flex-1\"\r\n                onClick={() => handleHarvestClick(staking.stakingId)}\r\n            >\r\n              Harvest\r\n            </BackgroundButton>\r\n          </div>\r\n        })}\r\n      </div>\r\n      <ToastContainer\r\n        className=\"text-white\"\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"colored\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}